version: "3.8"

services:
  postgres:
    image: postgres:17-alpine
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    environment:
      POSTGRES_USER: "${DATABASE_USER}"
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD}"
      POSTGRES_DB: "${DATABASE_NAME}"
      POSTGRES_MULTIPLE_DATABASES: "${DATABASE_NAME}_test"
    volumes:
      - db:/var/lib/postgresql/data
      - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh:ro
    networks:
      - shorter-url
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: >
      sh -c "if [ -n \"${REDIS_PASSWORD}\" ]; then
               exec redis-server --requirepass ${REDIS_PASSWORD};
             else
               exec redis-server;
             fi"
    ports:
      - "6378:6379"
    volumes:
      - redis-data:/data
    networks:
      - shorter-url
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: "${DATABASE_USER}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      DATABASE_NAME: "${DATABASE_NAME}"
      REDIS_HOST: redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "8080:8080"
    networks:
      - shorter-url

volumes:
  db:
  redis-data:

networks:
  shorter-url:
    driver: bridge